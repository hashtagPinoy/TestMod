package hashtagpinoy.testmod;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import hashtagpinoy.testmod.lists.BlockList;
import hashtagpinoy.testmod.lists.ItemList;
import net.minecraft.block.Block;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;


@Mod("testmodyeetus")
public class TestMod 
{

	public static TestMod instance;
	public static final String modid = "testmodyeetus";
	private static final Logger logger = LogManager.getLogger(modid);
	
	public static final ItemGroup test = new TestItemGroup();
	
	public TestMod() 
	{
		instance = this;
		
		FMLJavaModLoadingContext.get().getModEventBus().addListener(this::setup);
		FMLJavaModLoadingContext.get().getModEventBus().addListener(this::clientRegistries);
		MinecraftForge.EVENT_BUS.register(this);
	}
	
	private void setup(final FMLCommonSetupEvent event)
	{
		logger.info("Setup method registered. Hurrah! It works!");
	}
	
	private void clientRegistries(final FMLClientSetupEvent event)
	{
		logger.info("clientRegistries method registered. Hurrah! This also works!");
	}
	
	@Mod.EventBusSubscriber(bus=Mod.EventBusSubscriber.Bus.MOD)
	public static class RegsitryEvent
	{
		@SubscribeEvent
		public static void registerItems(final RegistryEvent.Register<Item> event)
		{
            ItemList.cobalt_ingot = new Item(new Item.Properties().group(test)).setRegistryName(location("cobalt_ingot"));
            ItemList.ludonite_ingot = new Item(new Item.Properties().group(test)).setRegistryName(location("ludonite_ingot"));
            ItemList.cobalt_block = new BlockItem(BlockList.cobalt_block, new Item.Properties().group(test)).setRegistryName(BlockList.cobalt_block.getRegistryName());
            ItemList.ludonite_block = new BlockItem(BlockList.ludonite_block, new Item.Properties().group(test)).setRegistryName(BlockList.ludonite_block.getRegistryName());

            event.getRegistry().registerAll
            (
                ItemList.cobalt_ingot,
                ItemList.ludonite_ingot,
                ItemList.cobalt_block,
                ItemList.ludonite_block
            );
			logger.info("Items registered.");
		}
	
	
		@SubscribeEvent
		public static void registerBlocks(final RegistryEvent.Register<Block> event)
		{
			
			BlockList.ludonite_block = new Block(Block.Properties.create(Material.IRON).hardnessAndResistance(5.0f, 3.0f).lightValue(6).sound(SoundType.METAL)).setRegistryName(location("ludonite_block"));
			BlockList.cobalt_block = new Block(Block.Properties.create(Material.IRON).hardnessAndResistance(2.0f, 3.0f).lightValue(2).sound(SoundType.METAL)).setRegistryName(location("cobalt_block"));
			//copy and paste ^^ to add new items
			//Don't forget to add a blockstate when making a block
			//Update models --> block, the lang file, and textures --> block
			
			event.getRegistry().registerAll
			(	
					BlockList.cobalt_block,
					BlockList.ludonite_block
			);
			logger.info("Blocks registered.");
		}
	
	
		private static ResourceLocation location(String name)
		{
			return new ResourceLocation(modid, name);
		}
	}
}

